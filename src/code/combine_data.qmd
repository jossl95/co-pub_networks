
---
title: Combine Data
date: today

execute: 
  eval: false
---


## Getting Started

```{r}
#| warning: false
#| output: false
# clear the global environment
rm(list = ls())
gc()
```

```{r}
#| warning: false
#| output: false

# load and activate packages
library(tidyverse)
library(readxl)
library(stringr)
library(lubridate)
library(openalexR)
library(rvest)
library(jsonlite)
library(cli)

# load custom functions 
source("src/utils/custom_functions.r")
.load_quarto_dependencies()

options(openalexR.mailto = "jos.slabbekoorn@ru.nl")
```

## Functions

### Combine demographics
```{r}

combine_demographics = function(data){
  scholars_wide =  data[['scholars']] |>
    mutate(
      year = as.integer(year(date) - 2000)
    ) |>
    arrange(naam, date) |>
    select(-university, -date, -google_scholar_id) |>
    pivot_wider(
      names_from  = year,
      values_from = c(email_adres, universiteit, functie, discipline),
      names_glue  = "{.value}_{year}",
      values_fill = NA,
      values_fn   = list(
      email_adres = ~ if (all(is.na(.x))) NA_character_ else str_c(unique(na.omit(.x)), collapse = "; "),
      universiteit  = ~ if (all(is.na(.x))) NA_character_ else first(na.omit(.x)),
      functie     = ~ if (all(is.na(.x))) NA_character_ else first(na.omit(.x)),
      discipline  = ~ if (all(is.na(.x))) NA_character_ else first(na.omit(.x))
      )
    ) |>
    select(
      naam, ends_with('22'), ends_with('24'), ends_with('25')
    )

  # create uid to author id lookup
  uid_to_id = data[['id']] |> bind_rows() |>
    distinct(uid, id) |>
    group_by(uid) |>
    summarize(id = list(id)) |>
    ungroup() |>
    rename(author_id = id)

  # combine all demographics
  demographics = data[['names']] |>
    left_join(data[['gender']]) |>
    left_join(data[['ethnicity']] |> select(uid, ethnicity, probability)) |>
    rename(ethnicity_prob = probability) |>
    left_join(scholars_wide) |>
    inner_join(uid_to_id) |>
    relocate(author_id, .after = 1)

  return(demographics)
}

```

### Parse works data

```{r}

add_citations = function(works){
   
  w = works |> 
    bind_rows() |> 
    distinct(work_id, .keep_all=TRUE) |>
    select(-uid, -author_id)

  scraped_works_ids = w|> distinct(work_id)

  for (id in names(works)) {
    tab = works[[id]]

    if ((nrow(tab) == 0) | !is_tibble(tab)) next
    cited =  tab |>
      unnest_longer(referenced_works) |>
      select(work_id, referenced_works) |>
      rename(citation_id = referenced_works) |>
      drop_na() |>
      filter(!is.logical(citation_id)) 
      
    if (nrow(cited) == 0 | !is_tibble(cited)) next
    cited = cited |>
      inner_join(w, by=join_by(citation_id == work_id)) |>
      nest(citations = -work_id)
    
    if (nrow(cited) == 0 | is.logical(cited$citation_id)) next
    works[[id]] = works[[id]] |> 
      left_join(cited, by = join_by(work_id == work_id))
  }

  return(works)
}

parse_works = function(data, demographics){
  uids = demographics |> distinct(uid) |> pull() |> na.omit()
  lookup = demographics |> distinct(author_id, uid)

  works = list()
  for (id in uids){
    works[[id]] = data$works[[id]]
  }
  return(works)
}

add_uid_to_authorships = function(works, demographics) {
  lookup = demographics |> 
    distinct(uid, author_id) |> 
    unnest_longer(author_id) |>
    rename(
      id = author_id,
      # authorships__uid = uid
    )

  for (id in names(works)){
    tab = works[[id]]
    if (nrow(tab) == 0 | !is_tibble(tab)) next

    works[[id]] = tab |>
      mutate(
        authorships = map(
          authorships,
          ~ lookup |> right_join(.x, by = join_by(id))  
        )
      )
  }
  return(works)
}

```

### Parse Scholar information

```{r}
parse_scholars = function(data, demographics){
  uids = demographics |> distinct(uid) |> pull() |> na.omit()
  scholartab = data[['id']] |> bind_rows() 

  authors= list()
  for (id_ in uids){
    authors[[id_]] = scholartab |> filter(uid == id_)
  }

  return(authors)
}
```


## Application

```{r}
data = list(
  scholars = freadRDS2('scholarid'),
  ethnicity = freadRDS2('ethnicity'),
  gender = freadRDS2('gender'),
  names = freadRDS2('names'),
  id = freadRDS2('oascholars', location = 'raw_data'),
  works = freadRDS2('oaworks', location = 'raw_data')
)
```

```{r}
demographics = combine_demographics(data)

works = parse_works(data, demographics) |> 
  add_uid_to_authorships(demographics) |> 
  add_citations() |>
  distinct(work_id, .keep_all = TRUE)

scholars_list = parse_scholars(data, demographics)

scholars = list(
  demographics = demographics, 
  scholars_oa = scholars_list,
  works = works
)

fsaveRDS(scholars, file="scholars", location = "./data/combined/")
```
